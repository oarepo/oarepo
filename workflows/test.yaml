# -*- coding: utf-8 -*-
#
# Copyright (C) 2024 CERN.

name: Python CI

on:
  workflow_call:
    inputs: {}

jobs:
  extract_dependencies:
    runs-on: ubuntu-24.04
    outputs:
      python_versions: ${{ steps.extract.outputs.python_versions }}
      oarepo_versions: ${{ steps.extract.outputs.oarepo_versions }}
      node_versions: ${{ steps.extract.outputs.node_versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Extract dependencies
        id: extract
        shell: "bash"
        run: |
          ./run.sh oarepo-versions > versions.json
          # The versions.json file looks like this:
          # {
          #   "python-versions": ["3.13", "3.12"],
          #   "oarepo-versions": ["13", "12"],
          #   "node-versions": ["20", "18"]
          # }
          #
          # Extract the versions using jq
          echo "Extracting versions from versions.json"
          PYTHON_VERSIONS=$(jq -r '.["python-versions"]' versions.json)
          OAREPO_VERSIONS=$(jq -r '.["oarepo-versions"]' versions.json)
          NODE_VERSIONS=$(jq -r '.["node-versions"]' versions.json)

          echo "Python versions: $PYTHON_VERSIONS"
          echo "OARepo versions: $OAREPO_VERSIONS"
          echo "Node.js versions: $NODE_VERSIONS"

          echo "python_versions=${PYTHON_VERSIONS}" >> $GITHUB_OUTPUT
          echo "oarepo_versions=${OAREPO_VERSIONS}" >> $GITHUB_OUTPUT
          echo "node_versions=${NODE_VERSIONS}" >> $GITHUB_OUTPUT

      # save the versions.json to artifacts
      - name: Save versions.json
        uses: actions/upload-artifact@v4
        with:
          name: versions
          path: versions.json


  tests:
    runs-on: ubuntu-24.04
    needs: extract_dependencies
    strategy:
      fail-fast: false
      matrix:
        python_version: ${{ fromJson(needs.extract_dependencies.outputs.python_versions) }}
        oarepo_version: ${{ fromJson(needs.extract_dependencies.outputs.oarepo_versions) }}
        node_version: ${{ fromJson(needs.extract_dependencies.outputs.node_versions) }}

    env:
      PYTHON_VERSION: ${{ matrix.python_version }}
      OAREPO_VERSION: ${{ matrix.oarepo_version }}
      NODE_VERSION: ${{ matrix.node_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Create tools directory"
        run: |
          if [ ! -d .tools ] ; then mkdir .tools ; fi
          if [ ! -d .tools/bin ] ; then mkdir .tools/bin ; fi
          echo "${{ github.workspace }}/.tools/bin" >> $GITHUB_PATH

      - name: "Install UV resolver"
        shell: "bash"
        run: |
          if [ ! -d .tools ] ; then mkdir .tools ; fi
          ${PYTHON} -m venv .tools/uv
          .tools/uv/bin/pip install -U uv
          ln -s ${{ github.workspace }}/.tools/uv/bin/uv ${{ github.workspace }}/.tools/bin/uv
          uv --version

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run tests
        shell: "bash"
        run: 
          ./run.sh tests

  lint:
    runs-on: ubuntu-24.04
    needs: extract_dependencies
    steps:
      - name: Run linter
        shell: "bash"
        run: 
          ./run.sh lint
